$font-specs: (
    hero-h1: 6rem 6rem true,
    h1: 4.8rem 5rem true,
    h2: 3.6rem 4rem true,
    h3: 2.4rem 3rem true,
    h4: 1.8rem 2.5rem true,
    body-large: 1.8rem 3rem,
    body-regular: 1.6rem 2.5rem,
    helper-label: 1.4rem 2rem
);

@mixin title-font($size) {
    font-size: $size;
    font-weight: bold;
    letter-spacing: -0.04 * $size;
    line-height: normal;
}

@mixin scale-feature($feature, $small, $large) {
    $phone-max-rem: $phone-max / 1em * 1rem / $scale-factor;
    $tablet-max-rem: $tablet-max / 1em * 1rem / $scale-factor;
    $width-diff: $tablet-max-rem - $phone-max-rem;

    @include width-up-to($phone-max) {
        #{$feature}: $small;
    }
    @include wider-than($tablet-max) {
        #{$feature}: $large;
    }
    @include width-between($phone-max, $tablet-max) {
        $feature-diff: nth($large, 1) - nth($small, 1);
        $feature-to-width-ratio: $feature-diff / $width-diff;
        $feature-size-vw: $feature-to-width-ratio * 100vw;
        $feature-size-offset: $feature-to-width-ratio * $phone-max-rem - nth($small, 1);

        #{$feature}: calc(#{$feature-size-vw} - #{$feature-size-offset});
    }
}

@mixin scale-set-font($spec-small, $spec-large) {
    $fs1: map-get($font-specs, $spec-small);
    $fs2: map-get($font-specs, $spec-large);
    $small-size: nth($fs1, 1);
    $large-size: nth($fs2, 1);

    @include scale-feature(font-size, $small-size, $large-size);
    @include scale-feature(letter-spacing, -0.04 * nth($fs1, 1), -0.04 * nth($fs2, 1));
    @include scale-feature(line-height, nth($fs1, 2), nth($fs2, 2));

    @if (length($fs1) > 2 and nth($fs1, 3)) {
        font-weight: bold;
    }
}

@mixin body-font($size) {
    font-size: $size;
    font-weight: normal;
    letter-spacing: normal;
    line-height: normal;
}

@mixin set-font($name) {
    $spec: map-get($font-specs, $name);
    @if (length($spec) > 2 and nth($spec, 3)) {
        @include title-font(nth($spec, 1));
    }
    @else {
        @include body-font(nth($spec, 1));
    }
    line-height: nth($spec, 2);
}

// Create %text-hero-h1, etc placeholders
@each $name, $spec in $font-specs {
    %text-#{$name} {
        @include set-font($name);
    }
}

$tutor-font-specs: (
    hero-h1: 4.8rem 5rem,
    h1: 3.6rem 4rem,
    h2: 2.4rem 3rem,
    h3: 1.4rem 2.5rem,
    h4: 1.6rem 2.5rem
);

@mixin set-tutor-font($name) {
    @if (map-has-key($tutor-font-specs, $name)) {
        $spec: map-get($tutor-font-specs, $name);
        font-size: nth($spec, 1);
        font-weight: bold;
        line-height: nth($spec, 2);
        letter-spacing: -0.04 * nth($spec, 1);

        @if ($name == h3) {
            font-weight: normal;
            letter-spacing: 0;
            text-transform: uppercase;
        }
    }
    @else {
        @include set-font($name);
    }
}

// Create .tutor placeholders
@each $name, $spec in $tutor-font-specs {
    %tutor %text-#{$name} {
        @include set-tutor-font($name);
    }
}
